#
# ========================================================================
#
# Chris Montgomery's ZSH Configuration
#
# https://github.com/montchr/dots/zsh/dot-zshrc
#
# Sources:
# https://github.com/zdharma/zinit-configs/
# https://github.com/NICHOLAS85/dotfiles/
#
# ========================================================================
#

# - - - - - - - - - - - - - - - - - - - -
# Profiling Tools
# - - - - - - - - - - - - - - - - - - - -

PROFILE_STARTUP=false
if [[ "$PROFILE_STARTUP" == true ]]; then
    zmodload zsh/zprof
    # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
    PS4=$'%D{%M%S%.} %N:%i> '
    exec 3>&2 2>$HOME/startlog.$$
    setopt xtrace prompt_subst
fi

# - - - - - - - - - - - - - - - - - - - -
# Instant Prompt
# - - - - - - - - - - - - - - - - - - - -

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# - - - - - - - - - - - - - - - - - - - -
# Zsh Core Configuration
# - - - - - - - - - - - - - - - - - - - -

typeset -g \
  HISTSIZE=290000 \
  SAVEHIST=290000 \
  HISTFILE=~/.zhistory \
  ABSD=${${(M)OSTYPE:#*(darwin|bsd)*}:+1}

(( ABSD )) && {
    export LSCOLORS=dxfxcxdxbxegedabagacad CLICOLOR="1"
}

# Requred by Homebrew
export PATH="/usr/local/sbin:$PATH"

export XDG_CONFIG_HOME="$HOME/.config"
export DOTFILES="$HOME/.dotfiles"
export DOTS="$HOME/.dots"
export ZSH_DOTS="$DOTS/zsh"

export CACHEDIR="$HOME/.local/share"
[[ -d "$CACHEDIR" ]] || mkdir -p "$CACHEDIR"

# Use chpwd_recent_dirs to start new sessions from last working dir
# Populate dirstack with chpwd history
autoload -Uz chpwd_recent_dirs add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':chpwd:*' recent-dirs-file "${TMPDIR}/chpwd-recent-dirs"
dirstack=($(awk -F"'" '{print $2}' ${$(zstyle -L ':chpwd:*' recent-dirs-file)[4]} 2>/dev/null))
[[ ${PWD} = ${HOME}  || ${PWD} = "." ]] && (){
  local dir
  for dir ($dirstack){
    [[ -d ${dir} ]] && { cd -q ${dir}; break }
  }
} 2>/dev/null


ZINIT_HOME="${ZINIT_HOME:-${ZPLG_HOME:-${ZDOTDIR:-${HOME}}/.zinit}}"
ZINIT_BIN_DIR_NAME="${${ZINIT_BIN_DIR_NAME:-${ZPLG_BIN_DIR_NAME}}:-bin}"
### Added by Zinit's installer
if [[ ! -f ${ZINIT_HOME}/${ZINIT_BIN_DIR_NAME}/zinit.zsh ]]; then
  print -P "%F{33}▓▒░ %F{220}Installing DHARMA Initiative Plugin Manager (zdharma/zinit)…%f"
  command mkdir -p "${ZINIT_HOME}" && command chmod g-rwX "${ZINIT_HOME}"
  command git clone https://github.com/zdharma/zinit "${ZINIT_HOME}/${ZINIT_BIN_DIR_NAME}" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f" || \
    print -P "%F{160}▓▒░ The clone has failed.%f"
fi
source "${ZINIT_HOME}/${ZINIT_BIN_DIR_NAME}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
  zinit-zsh/z-a-rust \
  zinit-zsh/z-a-as-monitor \
  zinit-zsh/z-a-patch-dl \
  zinit-zsh/z-a-bin-gem-node

### End of Zinit's installer chunk


# zt() : First argument is a wait time and suffix, ie "0a". Anything that
# doesn't match will be passed as if it were an ice mod. Default ices depth'3'
# and lucid
zt()  { zinit depth'3' lucid ${1/#[0-9][a-c]/wait"$1"} "${@:2}"; }

# - - - - - - - - - - - - - - - - - - - -
# Initial Prompt
# Annexes
# Config Source
# - - - - - - - - - - - - - - - - - - - -

zt light-mode for \
  pick'async.zsh' \
    mafredri/zsh-async \

zinit ice depth=1
zinit light romkatv/powerlevel10k

# Load config files plugin.
zt light-mode blockf for \
  _local/config-files

#
# Plugins
# - - - - - - - - - - - - - - - - - - - -

zt atinit'HISTFILE="${HOME}/.histfile"' for \
  OMZL::history.zsh

# Trigger-load block
zt light-mode for \
  trigger-load'!x' \
    OMZ::plugins/extract/extract.plugin.zsh \
  trigger-load'!man' \
    ael-code/zsh-colored-man-pages \
  trigger-load'!ga;!gcf;!gclean;!gd;!glo;!grh;!gss' \
    wfxr/forgit \
  trigger-load'!zshz' blockf \
    agkozak/zsh-z \
  trigger-load'!gencomp' pick'zsh-completion-generator.plugin.zsh' blockf \
  atload'alias gencomp="zinit silent nocd as\"null\" wait\"2\" atload\"zinit creinstall -q _local/config-files; zicompinit\" for /dev/null; gencomp"' \
    RobSis/zsh-completion-generator

zt 0a light-mode for \
  OMZL::completion.zsh \
  if'false' ver'dev' \
    marlonrichert/zsh-autocomplete \
  has'systemctl' \
    OMZP::systemd/systemd.plugin.zsh \
    OMZP::sudo/sudo.plugin.zsh \
  blockf \
    zsh-users/zsh-completions \
  atload'_zsh_autosuggest_start' \
    zsh-users/zsh-autosuggestions \
  pick'fz.sh' atload'ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(autopair-insert __fz_zsh_completion)' \
    changyuheng/fz


zt 0b light-mode for \
  pick'autopair.zsh' nocompletions atload'ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(autopair-insert)' \
    hlissner/zsh-autopair \
  trackbinds patch"$pchf/%PLUGIN%.patch" \
  reset pick'dircycle.zsh' \
    michaelxmcbride/zsh-dircycle \
  autoload'#manydots-magic' \
    knu/zsh-manydots-magic \
  pick'autoenv.zsh' nocompletions \
    Tarrasch/zsh-autoenv \
  as'completion' mv'*.zsh -> _git' \
    felipec/git-completion \
  zsh-users/zsh-history-substring-search \
  zdharma/history-search-multi-word \
  OMZP::command-not-found \
  atinit'zicompinit; zicdreplay' \
    zdharma/fast-syntax-highlighting


zt 0c light-mode for \
  pack'bgn-binary' \
    junegunn/fzf \
  from'gh-r' as'program' \
    sei40kr/fast-alias-tips-bin \
    sei40kr/zsh-fast-alias-tips

zt 0c light-mode for \
  lukechilds/zsh-nvm

zt 0c light-mode binary for \
  sbin'fd*/fd;fd*/fd -> fdfind' from"gh-r" \
    @sharkdp/fd \
  sbin'bin/git-ignore' atload'export GI_TEMPLATE="$PWD/.git-ignore"; alias gi="git-ignore"' \
    laggardkernel/git-ignore

zt 0c light-mode null for \
  sbin"bin/git-dsf;bin/diff-so-fancy" \
    zdharma/zsh-diff-so-fancy \
  sbin \
    paulirish/git-open \
  sbin'*/rm-trash' atload'alias rm="rm-trash ${rm_opts}"' reset \
  patch"$pchf/%PLUGIN%.patch" \
    nateshmbhat/rm-trash \
  id-as'Cleanup' nocd atinit'unset -f zt; _zsh_autosuggest_bind_widgets' \
    zdharma/null

#
# Abbreviations
#


# @TODO abbreviations: https://github.com/olets/zsh-abbr
# abbr gbn '(git rev-parse --abbrev-ref HEAD)'
# abbr gbl 'git branch -a --sort=-committerdate'


# - - - - - - - - - - - - - - - - - - - -
# End Profiling Script
# - - - - - - - - - - - - - - - - - - - -

if [[ "$PROFILE_STARTUP" == true ]]; then
    unsetopt xtrace
    exec 2>&3 3>&-
    zprof > ~/zshprofile$(date +'%s')
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
