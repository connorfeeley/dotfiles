#
# ========================================================================
#
# Chris Montgomery's ZSH Configuration
#
# https://github.com/montchr/dots/zsh/dot-zshrc
#
# Sources:
# https://github.com/zdharma/zinit-configs/
# https://github.com/NICHOLAS85/dotfiles/
#
# ========================================================================
#

# - - - - - - - - - - - - - - - - - - - -
# Profiling Tools
# - - - - - - - - - - - - - - - - - - - -

PROFILE_STARTUP=false
if [[ "$PROFILE_STARTUP" == true ]]; then
    zmodload zsh/zprof
    # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
    PS4=$'%D{%M%S%.} %N:%i> '
    exec 3>&2 2>$HOME/startlog.$$
    setopt xtrace prompt_subst
fi

# - - - - - - - - - - - - - - - - - - - -
# Instant Prompt
# - - - - - - - - - - - - - - - - - - - -

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# - - - - - - - - - - - - - - - - - - - -
# Zsh Core Configuration
# - - - - - - - - - - - - - - - - - - - -

typeset -g \
  HISTSIZE=290000 \
  SAVEHIST=290000 \
  HISTFILE=~/.zhistory \
  ABSD=${${(M)OSTYPE:#*(darwin|bsd)*}:+1}

(( ABSD )) && {
    export LSCOLORS=dxfxcxdxbxegedabagacad CLICOLOR="1"
}

# Requred by Homebrew
export PATH="/usr/local/sbin:$PATH"

export \
    XDG_CONFIG_HOME="$HOME/.config" \
    DOTFILES="$HOME/.dotfiles" \
    DOTS="$HOME/.dots" \
    ZSH_DOTS="$DOTS/zsh" \
  EDITOR="emacsclient -cn" \
  GIT_EDITOR="${EDITOR}" \
  SYSTEMD_EDITOR=${EDITOR}

export CACHEDIR="$HOME/.local/share"
[[ -d "$CACHEDIR" ]] || mkdir -p "$CACHEDIR"

# Use chpwd_recent_dirs to start new sessions from last working dir
# Populate dirstack with chpwd history
autoload -Uz chpwd_recent_dirs add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':chpwd:*' recent-dirs-file "${TMPDIR}/chpwd-recent-dirs"
dirstack=($(awk -F"'" '{print $2}' ${$(zstyle -L ':chpwd:*' recent-dirs-file)[4]} 2>/dev/null))
[[ ${PWD} = ${HOME}  || ${PWD} = "." ]] && (){
  local dir
  for dir ($dirstack){
    [[ -d ${dir} ]] && { cd -q ${dir}; break }
  }
} 2>/dev/null


ZINIT_HOME="${ZINIT_HOME:-${ZPLG_HOME:-${ZDOTDIR:-${HOME}}/.zinit}}"
ZINIT_BIN_DIR_NAME="${${ZINIT_BIN_DIR_NAME:-${ZPLG_BIN_DIR_NAME}}:-bin}"
### Added by Zinit's installer
if [[ ! -f ${ZINIT_HOME}/${ZINIT_BIN_DIR_NAME}/zinit.zsh ]]; then
  print -P "%F{33}▓▒░ %F{220}Installing DHARMA Initiative Plugin Manager (zdharma/zinit)…%f"
  command mkdir -p "${ZINIT_HOME}" && command chmod g-rwX "${ZINIT_HOME}"
  command git clone https://github.com/zdharma/zinit "${ZINIT_HOME}/${ZINIT_BIN_DIR_NAME}" && \
    print -P "%F{33}▓▒░ %F{34}Installation successful.%f" || \
    print -P "%F{160}▓▒░ The clone has failed.%f"
fi
source "${ZINIT_HOME}/${ZINIT_BIN_DIR_NAME}/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
  zinit-zsh/z-a-rust \
  zinit-zsh/z-a-as-monitor \
  zinit-zsh/z-a-patch-dl \
  zinit-zsh/z-a-bin-gem-node

### End of Zinit's installer chunk


# zt() : First argument is a wait time and suffix, ie "0a". Anything that
# doesn't match will be passed as if it were an ice mod. Default ices depth'3'
# and lucid
zt()  { zinit depth'3' lucid ${1/#[0-9][a-c]/wait"$1"} "${@:2}"; }

# - - - - - - - - - - - - - - - - - - - -
# Initial Prompt
# Annexes
# Config Source
# - - - - - - - - - - - - - - - - - - - -

zt light-mode for \
  pick'async.zsh' \
    mafredri/zsh-async \

zinit ice depth=1
zinit light romkatv/powerlevel10k

# Load config files plugin.
zt light-mode blockf for \
  _local/config-files

#
# Plugins
# - - - - - - - - - - - - - - - - - - - -

# setopt promptsubst

    # atinit"
    #     ZSH_TMUX_FIXTERM=true
    #     ZSH_TMUX_AUTOSTART=true
    #     ZSH_TMUX_AUTOCONNECT=true
    # " \
    #     OMZP::tmux \

# Explanation:
# - Loading tmux first, to prevent jumps when tmux is loaded after .zshrc
# - History plugin is loaded early (as it has some defaults) to prevent empty history stack for other plugins
zt for \
    atinit"HIST_STAMPS=yyyy.mm.dd" \
        OMZL::history.zsh

zt 0a for \
    atload"
        alias ..='cd .. 2>/dev/null || cd "$(dirname $PWD)"' # Allows leaving from deleted directories
        alias ...='cd ../..'
        alias ....='cd ../../..'
        alias .....='cd ../../../..'
        alias ......='cd ../../../../..'
    " \
        OMZL::directories.zsh \
    OMZL::git.zsh \
    OMZL::grep.zsh \
    OMZL::termsupport.zsh \
    OMZP::git \
    OMZP::command-not-found \
    OMZ::plugins/extract/extract.plugin.zsh \
    skywind3000/z.lua \
    djui/alias-tips \
    chriskempson/base16-shell

zt 0a for \
  atload'_zsh_autosuggest_start' \
    zsh-users/zsh-autosuggestions \
  if'false' ver'dev' \
    marlonrichert/zsh-autocomplete \
  pick'autoenv.zsh' nocompletions \
    Tarrasch/zsh-autoenv

zt 0b light-mode for \
    atload'export ENHANCD_FILTER=fzf:fzy:peco' \
        b4b4r07/enhancd \
    atload'
        bindkey "$terminfo[kcuu1]" history-substring-search-up;
        bindkey "$terminfo[kcud1]" history-substring-search-down;
        bindkey "^[[A" history-substring-search-up;
        bindkey "^[[B" history-substring-search-down;
        bindkey -M vicmd "k" history-substring-search-up;
        bindkey -M vicmd "j" history-substring-search-down;
    ' \
        zsh-users/zsh-history-substring-search \
    bindmap"^R -> ^H" atinit"
        zstyle :history-search-multi-word page-size 10
        zstyle :history-search-multi-word highlight-color fg=red,bold
        zstyle :plugin:history-search-multi-word reset-prompt-protect 1
    " \
      zdharma/history-search-multi-word \
    autoload'#manydots-magic' \
        knu/zsh-manydots-magic \
    pick'autopair.zsh' nocompletions atload'ZSH_AUTOSUGGEST_CLEAR_WIDGETS+=(autopair-insert)' \
        hlissner/zsh-autopair \
    reset \
    atclone"local P=${${(M)OSTYPE:#*darwin*}:+g}
            \${P}sed -i \
            '/DIR/c\DIR 38;5;63;1' LS_COLORS; \
            \${P}dircolors -b LS_COLORS > c.zsh" \
    atpull'%atclone' pick"c.zsh" nocompile'!' \
    atload'zstyle ":completion:*" list-colors "${(s.:.)LS_COLORS}"' \
        trapd00r/LS_COLORS

zt 0b light-mode from'gh-r' as'program' for \
    junegunn/fzf \
    sei40kr/fast-alias-tips-bin \
    sei40kr/zsh-fast-alias-tips


# Load additional fzf helpers
zt 0c light-mode for \
    as"command" pick"bin/fzf-tmux" \
        junegunn/fzf \
    multisrc"shell/{completion,key-bindings}.zsh" \
    id-as"junegunn/fzf_completions" \
    pick"/dev/null" \
        junegunn/fzf

zt 0c light-mode atinit"
    typeset -gA FAST_HIGHLIGHT;
    FAST_HIGHLIGHT[git-cmsg-len]=100;
    ZINIT[COMPINIT_OPTS]=-C;
    zicompinit;
    zicdreplay;
  " for zdharma/fast-syntax-highlighting


zt 0c light-mode binary for \
  sbin'bin/git-ignore' atload'export GI_TEMPLATE="$PWD/.git-ignore"; alias gi="git-ignore"' \
    laggardkernel/git-ignore

zt 0c light-mode null for \
  sbin"bin/git-dsf;bin/diff-so-fancy" \
    zdharma/zsh-diff-so-fancy \
  sbin \
    paulirish/git-open \
  sbin'*/rm-trash' reset \
  patch"$pchf/%PLUGIN%.patch" \
    nateshmbhat/rm-trash

zt 1a for \
  Aloxaf/fzf-tab \
  lukechilds/zsh-nvm \
  zdharma/zui \
  zdharma/zbrowse


zt 2a light-mode for \
  ael-code/zsh-colored-man-pages \
  wfxr/forgit

zt 2b blockf \
  atpull'zinit creinstall -q .' \
  atload"zicompinit; zicdreplay" for \
    zsh-users/zsh-completions

zt 2b for \
  id-as'Cleanup' nocd \
  atinit'unset -f zt; _zsh_autosuggest_bind_widgets' \
    zdharma/null


#
# Abbreviations
#


# @TODO abbreviations: https://github.com/olets/zsh-abbr
# abbr gbn '(git rev-parse --abbrev-ref HEAD)'
# abbr gbl 'git branch -a --sort=-committerdate'


# - - - - - - - - - - - - - - - - - - - -
# Miscellaneous
# - - - - - - - - - - - - - - - - - - - -

zinit is-snippet for \
    if"[[ -f $HOME/.localrc  ]]" $HOME/.localrc


# - - - - - - - - - - - - - - - - - - - -
# End Profiling Script
# - - - - - - - - - - - - - - - - - - - -

if [[ "$PROFILE_STARTUP" == true ]]; then
    unsetopt xtrace
    exec 2>&3 3>&-
    zprof > ~/zshprofile$(date +'%s')
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
