#!/usr/bin/env bash

set -e

BASE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

META_DIR="meta"
META_LIB_DIR="${META_DIR}/lib"
DOTBOT_DIR="${META_LIB_DIR}/dotbot"

PROFILES_DIR="profiles"
MODULES_DIR="modules"
CONFIG_SUFFIX=".conf"
CONFIG_EXT="yaml"

BASE_CONFIG="${MODULES_DIR}/base${CONFIG_SUFFIX}.${CONFIG_EXT}"


install_module() {
  local configFile
  configFile="$(mktemp)"
  echo -e "
    $(<"${BASE_DIR}/${BASE_CONFIG}")
    $(<"${MODULES_DIR}/${module}/install${CONFIG_SUFFIX}.${CONFIG_EXT}")
  " > "$configFile"

  "${DOTBOT_DIR}/bin/dotbot" -d "${BASE_DIR}" \
    --plugin-dir "${META_DIR}/dotbot-brew" \
    -c "$configFile"

  rm -f "$configFile"
}

install_modules() {
  for config in "${@}"; do
    install_module ${config}
  done
}

install_profile() {
  local -a configs
  while IFS="" read -r config; do
    configs+=" ${config}"
  done < "${META_DIR}/${PROFILES_DIR}/$1"
  shift
  configs+=" ${*}"
  install_modules "$configs"
}

install_profiles() {
  for profile in "${@}"; do
    install_profiles ${profile}
  done
}

cd "${BASE_DIR}"
git -C "${META_LIB_DIR}" submodule sync --quiet --recursive
git submodule update --init --recursive "${META_LIB_DIR}"


case "$1" in
  profile|module)
    subcommand="$1"
    shift
    "install_${subcommand}s" "$@"
    ;;
  *)
    echo -n "[$(tput bold)$(tput setaf 1)error$(tput sgr0)] "
    echo "command $(tput bold)$1$(tput sgr0) not found."
    return 1
    ;;
esac
