#!/usr/bin/env bash
#
# os/ubuntu/install
#

set -e

# shellcheck source=../../lib/utils.sh
. "${DOTFILES_DIR}/lib/utils.sh"
# shellcheck source=./lib/pkg.sh
. "${DOTFILES_DIR}/os/ubuntu/lib/pkg.sh"


function .cleanup () {
  sudo service ssh restart

  [[ -f "/etc/sudoers.bak" ]] && {
    print_in_purple "Restoring original /etc/sudoers file..."
    sudo mv /etc/sudoers.bak /etc/sudoers
  }
}


# - - - - - - - - - - - - - - - - - - - -
# Main
# - - - - - - - - - - - - - - - - - - - -

function main () {

  pkg::update_repos
  pkg::upgrade_all

  pkg::install "Build Essential" "build-essential"
  pkg::install "GnuPG archive keys" "debian-archive-keyring"
  pkg::install "Git" "git"
  pkg::install "curl" "curl"

  if [[ "root" == $(whoami) ]]; then
    print_warning "Running as root! Creating a new user with sudo capabilities..."
    . ./user.sh
  fi

  execute \
    "sudo ufw allow OpenSSH; yes y | sudo ufw enable" \
    "Configure UFW"

  # Create and configure swapfile if it doesn't yet exist.
  [[ "$(sudo swapon -s)" != *"/swapfile"* ]] && {
    print_subhed "Swapfile doesn't exist! Creating and configuring swapfile..."
    . ./swapfile.sh
  }

  # Setup time services.
  . ./time.sh

  print_subhed "Cleaning up..."
  .cleanup

  print_success "Setup complete!"

}

main "$@"
